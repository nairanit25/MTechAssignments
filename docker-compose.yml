services:
  # Main Housing Price Prediction Application
  api:
    build:
      context: .
      dockerfile: Docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - REDIS_URL=redis://redis:6379
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - S3_ENDPOINT=http://localstack:4566
    volumes:
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      #- redis
      - mlflow
    networks:
      - mlops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 60s
      timeout: 10s
      retries: 3

  # MLflow experiment tracking
  mlflow:
    image: python:3.12-slim
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlflow/mlruns
      #- ./mlflow-artifacts:/mlflow/mlflow-artifacts
    working_dir: /mlflow
    command: >
      bash -c "
        apt-get update && \
        apt-get install -y gcc g++ libffi-dev && \
        pip install Setuptools==75.6.0  mlflow==3.0.0 && \
        mlflow server --host 0.0.0.0  --port 5000 \
        --backend-store-uri sqlite:///mlflow.db  \
        --default-artifact-root /mlflow/mlruns \
        --serve-artifacts
      "
    networks:
      - mlops-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 60s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - mlops-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - mlops-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # LocalStack for AWS simulation
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3,lambda,cloudwatch
      - DEBUG=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Required for Lambda or container support
    networks:
      - mlops-network
    restart: unless-stopped





networks:
  mlops-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
  localstack-data:
